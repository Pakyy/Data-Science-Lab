---
title: "Data Science Lab Project"
author: "Pasquale Gravante & Antonio Mastroianni"
date: "2023-10-12"
output: pdf_document
---

# Loading libraries 

```{r}
library(dplyr)
library(ggplot2)
```

# Loading data

```{r}
survey_data <- read.csv("C:/Users/masta/OneDrive/Desktop/UniversitÃ /Data Science/Data Science Lab/FINANCIAL LITERACY BANCA ITALIA/Dati Ricerca BI.csv")
```

# Data pre-processing

We create 3 different kind of scores and then we sum them up to obtain a unique financial literacy score.

## Financial behaviour score

```{r}

# Create the Financial literacy score

survey_data$financial_literacy_score <- 0

# Rule 1: 1 point if personally or jointly responsible for money management AND actively keeping track of money - Financial behaviours

rule_1 <- as.numeric((survey_data$qf1 %in% c(1, 2) & survey_data$qf2 == 1))

```

```{r}

# Rule 2: 1 point for any type of active saving (QF3_1 - QF3_99) - Financial behaviours

## Create a variable for active saving based on QF3_1 - QF3_99

active_saving_qf3 <- ifelse(rowSums(survey_data[, grep("^qf3_", names(survey_data))], na.rm = TRUE) >= 1 & survey_data$qf3_8 != 1 & survey_data$qf3_99 != 1, 1, 0)

## Creating the rule variable

rule_2 <- as.numeric(survey_data$active_saving_qf3 == 1)

```

```{r}

# Rule 3: 1 point if no borrowing to make ends meet - Financial behaviours

rule_3 <- with(survey_data, ifelse(qf11 == 0, 1, 
                                   ifelse(qf11 == 1 & !(qf12_3_e == 1 | qf12_3_f == 1 | qf12_3_g == 1 | 
                                                         qf12_4_k == 1 | qf12_4_l == 1 | qf12_5_m == 1 | 
                                                         qf12_5_o == 1 | qf12_6_p == 1 | qf12_6_q == 1 | qf12_99 == 1 | qf12_97 == 1),1,0)))

```

```{r}

# Rule 4: Financial behaviour - Choosing products

## Intermediate variable QP_D1

qp_d1 <- as.numeric(survey_data$qprod2 %in% c(1, 4))

## Create the intermediate variable qp_d2

qp_d2 <- rep(0, nrow(survey_data))

### Check rows where qprod2 is 1 or 4

rows_to_check <- survey_data$qprod2 %in% c(1, 4)

### Check variables for value 1 in the first set (answers that give 2 points)

qp_d2[rows_to_check] <- ifelse(
  rowSums(survey_data[rows_to_check, c("qprod3_2", "qprod3_3", "qprod3_4", "qprod3_5", "qprod3_6", "qprod3_7", "qprod3_8", "qprod3_10")], na.rm = TRUE) > 0,
  2,
  0
)

### Check variables for value 1 in the second set (answers that give 1 point)

qp_d2[rows_to_check & qp_d2 == 0] <- ifelse(
  rowSums(survey_data[rows_to_check & qp_d2 == 0, c("qprod3_1", "qprod3_9", "qprod3_11", "qprod3_12", "qprod3_13", "qprod3_14", "qprod3_15", "qprod3_16", "qprod3_17", "qprod3_18")], na.rm = TRUE) > 0,
  1,
  0
)

## Create the rule_4 variable and assign values based on intermediate variables scores

rule_4 <- ifelse(qp_d2 == 2, 2, ifelse(qp_d1 == 1 | qp_d2 == 1, 1, 0))

```

```{r}
# Creating Rule 5 - Financial behaviours

rule_5 <- ifelse(survey_data$qf10_6 %in% c(1, 2) & survey_data$qf10_7 %in% c(1, 2), 2,
                             ifelse(survey_data$qf10_6 %in% c(1, 2) | survey_data$qf10_7 %in% c(1, 2), 1, 0))
```

```{r}
# Creating Rule 6 - Financial behaviours

rule_6 <- ifelse(survey_data$qf10_1 %in% c(1, 2) & survey_data$qf10_4 %in% c(1, 2), 2,
                             ifelse(survey_data$qf10_1 %in% c(1, 2) | survey_data$qf10_4 %in% c(1, 2), 1, 0))
```

```{r}

# Summing up rules to get the financial behaviour score (goes from 0 to 9)

survey_data$financial_behaviour_score = rowSums(cbind(rule_1, rule_2, rule_3, rule_4, rule_5, rule_6))
```


## Financial Knowledge score

```{r}
rule_7 <- as.numeric(survey_data$qk3 == 3)
```

```{r}
rule_8 <- as.numeric(survey_data$qk4 == 0)
```

```{r}
rule_9 <- as.numeric(survey_data$qk5 == 102)
```

```{r}
rule_10 <- as.numeric(survey_data$qk5 == 102 & survey_data$qk6 == 1)
```

```{r}
rule_11 <- as.numeric(survey_data$qk7_1 == 1)
```

```{r}
rule_12 <- as.numeric(survey_data$qk7_2 == 1)
```

```{r}
rule_13 <- as.numeric(survey_data$qk7_3 == 1)
```

### Summing up the rules to create the score

```{r}
survey_data$financial_knowledge_score = rowSums(cbind(rule_7, rule_8, rule_9, rule_10, rule_11, rule_12, rule_13))
```

## Financial attitude score

### Recoding some variables 

```{r}
# Specify the columns to be recoded
columns_to_recode <- c("qf10_1", "qf10_2", "qf10_3", "qf10_4", "qf10_5", "qf10_6", "qf10_7", "qf10_8", "qf10_9", "qf10_10", "qf10_11", "qf10_12")

# Recode -97, -98, -99 as 3 in the specified columns
survey_data[columns_to_recode] <- lapply(survey_data[columns_to_recode], function(x) ifelse(x %in% c(-97, -98, -99), 3, x))
```

### Creating the rule

```{r}
# Specify the columns for rescaling
columns_to_rescale <- c("qf10_2", "qf10_8")

# Create a temporary data frame for rescaled values
temp_data <- survey_data

# Rescale values from 1 to 5 to 0 to 4 in the temporary data frame
temp_data[columns_to_rescale] <- temp_data[columns_to_rescale] - 1

# Calculate the average and store it in rule_14
temp_data$rule_14temp <- rowMeans(temp_data[columns_to_rescale], na.rm = TRUE)
rule_14 = temp_data$rule_14temp
```

### Adding the score to the Financial Attitude score to the dataset

```{r}
survey_data$financial_attitude_score = rule_14
```

## Getting the final **Financial literacy score**

```{r}

survey_data$financial_literacy_score <- rowSums(survey_data[, c("financial_behaviour_score", "financial_attitude_score", "financial_knowledge_score")], na.rm = TRUE)

```




```{r}

#Chage the numerical values indicating the geographic area of Italy into the respective names of the areas.

survey_data <- survey_data %>%
  mutate(AREA5 = case_when(
    AREA5 == 1 ~ "North-West",
    AREA5 == 2 ~ "North-East",
    AREA5 == 3 ~ "Centre",
    AREA5 == 4 ~ "South",
    AREA5 == 5 ~ "Isles" 
  ))

survey_data <- survey_data %>%
  mutate(qd1 = case_when(
    qd1 == "0" ~ "Female",
    qd1 == "1" ~ "Male"
  ))

```


```{r}
# Change variable names

survey_data <- survey_data %>%
  rename(
    gender = qd1,
    household_members = qd5b,
    age = qd7,
    education = qd9,
    employment_status = qd10,
    birth_country = qd12
  )
```


# EDA



```{r}

#distribution of the population

ggplot(survey_data, aes(x = age)) +
  geom_density(fill = "skyblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(age), color = "Mean Age"), linetype = "dashed", size = 1) +
  labs(title = "Density Plot of Age with Mean Highlighted",
       x = "Age",
       y = "Density",
       color = "Legend") +
  scale_color_manual(values = c("red"), labels = c("Mean Age")) +
  theme_minimal()
```


```{r}

#Geographic areas relative frequencies

table(survey_data$AREA5)
prop.table(table(survey_data$AREA5))
```

```{r}
table(survey_data$household_members)
prop.table(table(survey_data$household_members))
```



```{r}
#geographic areas pie-chart

areas <- data.frame(prop.table(table(survey_data$AREA5))*100)

ggplot(areas, aes(x = "", y = Freq, fill = Var1)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar(theta = "y") +
  ggtitle("Geographical distribution of the participants") +
  geom_text(aes(label = sprintf("%.1f%%", Freq)), position = position_stack(vjust = 0.5)) +
  theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
```
```{r}
ggplot(survey_data, aes(x = as.character(education))) + 
  geom_bar(aes(y = ..prop.., group = 1), fill = 'darkorange', width = 0.6) +
  labs(title = " Distribution of Educational qualification",
       x = '',
       y = '%') +
  scale_x_discrete(labels = c("1" = "University-level",
                              "3" = "Complete secondary",
                              "4" = "Some secondary",
                              "5" = "Complete primary",
                              "6" = "Some primary",
                              "7" = "No education"))
```
```{r}
ggplot(survey_data, aes(x = as.character(employment_status))) + 
  geom_bar(aes(y = ..prop.., group = 1), fill = 'darkorange', width = 0.6) +
  labs(title = " Distribution of Employment status",
       x = '',
       y = '%') +
  scale_x_discrete(labels = c("1" = "Self-Employed",
                              "2" = "In paid employment",
                              "4" = "Looking after home",
                              "5" = "Looking for job",
                              "6" = "Retired",
                              "9" = "Student",
                              "10" = "Other"))+
  theme(axis.text.x = element_text(angle = 45, hjust=1))
```

```{r}
sq3sum <- data.frame(value=apply(survey_data[,5:11],2,sum))
sq3sum$key=rownames(sq3sum)
ggplot(data=sq3sum, aes(x=key, y=value, fill=key)) +
geom_bar(colour="white", stat="identity", width= 0.6) +
  labs(title = 'Saving habits',
       x = '',
       y = '')+
  scale_x_discrete(labels = c("qf3_1" = "",
                              "qf3_3" = "",
                              "qf3_4" = "",
                              "qf3_6" = "",
                              "qf3_7" = "",
                              "qf3_8" = "",
                              "qf3_99" = ""))+
  theme(axis.text.x = element_text(angle = 70, hjust=1, size = 7)) +
  scale_fill_discrete(name = 'Habits', labels = c("Saving cash at home or in wallet", 
                                                  "Paying money into a savings account",
                                                  "Giving money to family",
                                                  "Buying financial investment products",
                                                  "Or in some other way",
                                                  "Has not been actively saving",
                                                  "No answer"))
```

```{r}
qf9sum <- data.frame(value=apply(survey_data[,14:24],2,sum))
qf9sum$key=rownames(qf9sum)
ggplot(data=qf9sum, aes(x=key, y=value, fill=key)) +
geom_bar(colour="white", stat="identity", width= 0.6) +
  labs(title = 'Retirement funding plans',
       x = '',
       y = '')+
  scale_x_discrete(labels = c("qf9_1" = "",
                              "qf9_2" = "",
                              "qf9_3" = "",
                              "qf9_4" = "",
                              "qf9_5" = "",
                              "qf9_6" = "",
                              "qf9_7" = "",
                              "qf9_8" = "",
                              "qf9_9" = "",
                              "qf9_10" = "",
                              "qf9_99" = ""))+
  theme(axis.text.x = element_text(angle = 70, hjust=1, size = 7)) +
  scale_fill_discrete(name = 'Habits', labels = c("Drawing a government pension/old-age benefit", 
                                                  "From an occupational or workplace pension plan",
                                                  "From a private pension plan",
                                                  "From selling your financial assets",
                                                  "From selling your non-financial assets",
                                                  "From income generated by your financial or non-financial assets",
                                                  "By relying on a spouse or partner to support you",
                                                  "By relying on your children or other family members to support you",
                                                  "Survivorâs pension",
                                                  "Other",
                                                  "No answer"))
```

```{r}
qprod1csum <- data.frame(value=apply(survey_data[,25:36],2,sum))
qprod1csum$key=rownames(qprod1csum)
ggplot(data=qprod1csum, aes(x=key, y=value, fill=key)) +
geom_bar(colour="white", stat="identity", width= 0.6) +
  labs(title = 'Most bought financial products',
       x = '',
       y = '')+
  scale_x_discrete(labels = c("qprod1c_1" = "",
                              "qprod1c_2" = "",
                              "qprod1c_3" = "",
                              "qprod1c_5" = "",
                              "qprod1c_6" = "",
                              "qprod1c_7" = "",
                              "qprod1c_8" = "",
                              "qprod1c_10" = "",
                              "qprod1c_11" = "",
                              "qprod1c_12" = "",
                              "qprod1c_14" = "",
                              "qprod1c_99" = ""))+
  theme(axis.text.x = element_text(angle = 70, hjust=1, size = 7)) +
  scale_fill_discrete(name = 'Habits', labels = c("Pension or retirement product", 
                                                  "Investment account such as a unit trust",
                                                  "Mortgage or a bank loan secured on a property",
                                                  "unsecured bank loan or a salary/pension-backed
loan",
                                                  "credit card",
                                                  "current/checking account",
                                                  "savings account",
                                                  "Insurance",
                                                  "Stocks and shares",
                                                  "Bonds",
                                                  "A prepaid debit card/ payment card",
                                                  "No answer"))

```


```{r}
library(corrplot)

cor_matrix_scores <- cor(survey_data[,107:110], use = "complete.obs")
corrplot(cor_matrix_scores, method = "color", type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)

```

```{r}

# Check if there is a linear relationship between financial literacy score and the demographic covariates

literacy_score_model <- lm(financial_literacy_score ~ gender + as.factor(household_members) + age + as.factor(education) + as.factor(employment_status) + as.factor(birth_country) + AREA5, survey_data[,c(99,100,101,102,103,104,106,107,108,109,110)])
summary(literacy_score_model)

```

```{r}

# Visualize the scores 

literacy_score_model <- lm(formula = financial_literacy_score ~ gender + as.factor(household_members) + 
    age + as.factor(education) + as.factor(employment_status) + 
    as.factor(birth_country) + AREA5, data = survey_data[, c(99, 
    100, 101, 102, 103, 104, 106, 107, 108, 109, 110)])
summary(literacy_score_model)
```

```{r}
plot(survey_data$age,
     literacy_score_model$residuals)
```

```{r}
boxplot(literacy_score_model$residuals ~ survey_data$gender, main = "Residuals by gender")
boxplot(literacy_score_model$residuals ~ as.factor(survey_data$household_members), main = "Residuals by household members")
boxplot(literacy_score_model$residuals ~ as.factor(survey_data$education), main = "Residuals by education")
boxplot(literacy_score_model$residuals ~ as.factor(survey_data$employment_status), main = "Residuals by empolyment status")


# A linear model is not able to predict financial literacy score.

```

```{r}

```

